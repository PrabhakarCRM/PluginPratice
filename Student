using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace StudentAutoNumberGen
{
    public class Student_CreateAutoNumberPre : IPlugin
    {
        public void Execute(IServiceProvider serviceProvider)
        {

            IPluginExecutionContext executionContext = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));
            ITracingService tracingService = (ITracingService)serviceProvider.GetService(typeof(ITracingService));

            try
            {
                IOrganizationServiceFactory organizationServiceFactory = (IOrganizationServiceFactory)serviceProvider.GetService(typeof(IOrganizationServiceFactory));
                IOrganizationService service = (IOrganizationService)organizationServiceFactory.CreateOrganizationService(executionContext.UserId);


                if (executionContext.MessageName.ToLower() != "create")
                {
                    return;
                }
                Entity targetEntity = executionContext.InputParameters["Target"] as Entity;
                //Cration Application Number based on School Name
                var scname = targetEntity.GetAttributeValue<OptionSetValue>("plugin_schoolname").Value;//value option set =  610790000
                Entity autonumberconf1 = new Entity("plugin_autonuberconfig");
                StringBuilder autonumber = new StringBuilder();
                string prefix, suffix, separate, current, year, day, month;

                DateTime today = DateTime.Now;
                year = today.Year.ToString();
                month = today.Month.ToString("00");  //06
                day = today.Day.ToString("00");

                QueryExpression applicationconfig = new QueryExpression()
                {
                    EntityName = "plugin_autonuberconfig",
                    ColumnSet = new ColumnSet("plugin_prefix", "plugin_suffix", "plugin_seperator", "plugin_current", "plugin_name")
                };
                EntityCollection ecoll = service.RetrieveMultiple(applicationconfig);
                if(ecoll.Entities.Count == 0)
                {
                    return;
                }
               
               if (scname == 610790000)
                {
                    foreach (Entity e in ecoll.Entities)
                    {
                        if (e.Attributes["plugin_name"].ToString().ToLower() == "aditya")
                        {
                            prefix = e.GetAttributeValue<string>("plugin_prefix");
                            suffix = e.GetAttributeValue<string>("plugin_suffix");
                            separate = e.GetAttributeValue<string>("plugin_seperator");
                            current = e.GetAttributeValue<string>("plugin_current");
                            int tempcurr = int.Parse(current);
                            tempcurr++;
                            current = tempcurr.ToString("00000");
                            autonumberconf1.Id = e.Id;
                            autonumberconf1["plugin_current"] = current;
                            service.Update(autonumberconf1);
                            autonumber.Append(prefix + separate + year + month + day + separate + suffix + separate + current);
                            break;

                        }
                    }
                    targetEntity["plugin_studentnumber"] = autonumber.ToString();

                }
               else if (scname == 610790001)
                {
                    foreach (Entity e in ecoll.Entities)
                    {
                        if (e.Attributes["plugin_name"].ToString().ToLower() == "bashyam")
                        {
                            prefix = e.GetAttributeValue<string>("plugin_prefix");
                            suffix = e.GetAttributeValue<string>("plugin_suffix");
                            separate = e.GetAttributeValue<string>("plugin_seperator");
                            current = e.GetAttributeValue<string>("plugin_current");
                            int tempcurr = int.Parse(current);
                            tempcurr++;
                            current = tempcurr.ToString("00000");
                            autonumberconf1.Id = e.Id;
                            autonumberconf1["plugin_current"] = current;
                            service.Update(autonumberconf1);
                            autonumber.Append(prefix + separate + year + month + day + separate + suffix + separate + current);
                            break;

                        }
                    }
                    targetEntity["plugin_studentnumber"] = autonumber.ToString();

                }
               else if (scname == 610790002)
                {
                    foreach (Entity e in ecoll.Entities)
                    {
                        if (e.Attributes["plugin_name"].ToString().ToLower() == "gouthami model school")
                        {
                            prefix = e.GetAttributeValue<string>("plugin_prefix");
                            suffix = e.GetAttributeValue<string>("plugin_suffix");
                            separate = e.GetAttributeValue<string>("plugin_seperator");
                            current = e.GetAttributeValue<string>("plugin_current");
                            int tempcurr = int.Parse(current);
                            tempcurr++;
                            current = tempcurr.ToString("00000");
                            autonumberconf1.Id = e.Id;
                            autonumberconf1["plugin_current"] = current;
                            service.Update(autonumberconf1);
                            autonumber.Append(prefix + separate + year + month + day + separate + suffix + separate + current);
                            break;

                        }
                    }
                    targetEntity["plugin_studentnumber"] = autonumber.ToString();

                }
               else if (scname == 610790003)
                {
                    foreach (Entity e in ecoll.Entities)
                    {
                        if (e.Attributes["plugin_name"].ToString().ToLower() == "narayana")
                        {
                            prefix = e.GetAttributeValue<string>("plugin_prefix");
                            suffix = e.GetAttributeValue<string>("plugin_suffix");
                            separate = e.GetAttributeValue<string>("plugin_seperator");
                            current = e.GetAttributeValue<string>("plugin_current");
                            int tempcurr = int.Parse(current);
                            tempcurr++;
                            current = tempcurr.ToString("00000");
                            autonumberconf1.Id = e.Id;
                            autonumberconf1["plugin_current"] = current;
                            service.Update(autonumberconf1);
                            autonumber.Append(prefix + separate + year + month + day + separate + suffix + separate + current);
                            break;

                        }
                    }
                    targetEntity["plugin_studentnumber"] = autonumber.ToString();

                }
               else if (scname == 610790004)
                {
                    foreach (Entity e in ecoll.Entities)
                    {
                        if (e.Attributes["plugin_name"].ToString().ToLower() == "sri chaitanya")
                        {
                            prefix = e.GetAttributeValue<string>("plugin_prefix");
                            suffix = e.GetAttributeValue<string>("plugin_suffix");
                            separate = e.GetAttributeValue<string>("plugin_seperator");
                            current = e.GetAttributeValue<string>("plugin_current");
                            int tempcurr = int.Parse(current);
                            tempcurr++;
                            current = tempcurr.ToString("00000");
                            autonumberconf1.Id = e.Id;
                            autonumberconf1["plugin_current"] = current;
                            service.Update(autonumberconf1);
                            autonumber.Append(prefix + separate + year + month + day + separate + suffix + separate + current);
                            break;

                        }
                    }
                    targetEntity["plugin_studentnumber"] = autonumber.ToString();

                }


            }
            catch (Exception ex)
            {
                throw new InvalidPluginExecutionException(ex.Message);
            }
        }
    }
}
